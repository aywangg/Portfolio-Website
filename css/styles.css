:root {
  --bg-color: #F0F8FF;
  --link-visited-color: #05676E;
  --link-active-color: #FF9342;
  --button-bg-color: #FF9342;
  --text-color: #F0F8FF;
  --anchor-color: #357b70;
  --heading-font-weight: 700;
}

body {
  background-color: var(--bg-color);
  font-family: 'Merriweather', sans-serif;
  font-weight: 300;
  font-size: 16px;
  /* sets the font size to 16px */
  line-height: 1.6;
  /* sets the line height to 1.6 */
}
h1 {
  font-size: 30px;
  font-weight: var(--heading-font-weight);
  font-variant: small-caps;
}
h2 {
  font-size: 24px;
  font-weight: var(--heading-font-weight);
}
h3{
  font-size: 18px;
  font-weight: var(---heading-font-weight);
}
a {
  color: var(--link-visited-color);
}
a:visited{
  /*visited link*/
  color: var(--anchor-color);
}
a:hover, a:focus {
  /*no underlining when hovering over a link*/
  text-decoration: none;
}
a:active {
  /*selected link*/
  color: var(--link-active-color);
}
button,
.button {
  /* overwrites browser defaults and resets the border */
  border: none;
  display: inline-block;
  /*takes the font from the outer container */
  font-family: inherit;
  /*styles the background color, font color, and the text decoration (underline, etc.) of the button */
  background-color: var(--button-bg-color);
  color: var(--text-color);
  text-decoration: none;
  /* adds spacing to the button (this will be discussed more in depth later)*/
  padding: 10px;
  border-radius: 3px;
  /*gives the button a bottom border with a width of 2px, a type of sold, and a color in RBGA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: 0.2s opacity;
}
button:hover,
button:focus,
.button:hover,
.button:focus {
  /*lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /*reduces the opacity of the button to 80% */
  opacity: 0.8;
}
/*
  Colors used
  Text Color <Dark Gray): #2b2b2b;
  Primary Color (Purple): #357b70;
  Secondary Color (Orange): #e0b354;
  font-weight: bold; (emboldens a font, though it’s better to use the weight as set in the font link; some examples are 300, 400, or 700)
  font-style: italic; (italicizes a font, though make sure you’ve selected the italicized version of the font in Google Fonts, as well)
  font-variant: small-caps; (transforms all lowercase letters into small caps—uppercase letters set at the same height as their surrounding lowercase letters)
  text-decoration: underline; (underlines a piece of text)
*/
div{
  padding: 10px; /*adds a 10px inner spacing to all sides */
  margin: 10px;  /*adds a 10px outer spacing to all sides */
  /*border: 1px solid black; attributes dsx thickness, type, color */
}
.profile__portrait {
  float: left;
}
.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}
.profile__portrait {
  float: left;
  width: 270px;
  height: auto;
  margin-right:40px;
  border-radius: 50%;
}
.profile{
  max-width: 700px;
  margin: 0 auto;
}
.contact-body {
  margin: 0 auto;
}
.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}
.page-header__item {
  flex:0 1 200px;
  margin: 20px;
}
.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}
.navigation-list{
  list-style-type: none;
}
.navigation-list li{
  display: inline-block;
  margin-left: 15px;
}
.grid__item{
  background-color: lightgray;
  padding: 10px;
}
.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
}
@media all and (max-width: 500px) {
  .grid{
    grid-template-columns: 1fr;
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px){
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

@keyframes helicopter-move {
  from {
    transform: translate(80px, 50px);
  }
  to {
    transform: translate(-30px, 50px);
  }
}

.helicopter {
  animation-duration: 30s;
  animation-name: helicopter-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes airplane-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

.airplane {
  animation: 30s airplane-move infinite alternate linear;
}
